// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TgJobAdAnalytics.Data;

#nullable disable

namespace TgJobAdAnalytics.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250930233539_StackClassification")]
    partial class StackClassification
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("TgJobAdAnalytics.Data.Messages.AdEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsUnique")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("MessageId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("StackId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IsUnique");

                    b.HasIndex("MessageId");

                    b.HasIndex("StackId");

                    b.ToTable("Ads");
                });

            modelBuilder.Entity("TgJobAdAnalytics.Data.Messages.ChatEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("TelegramId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TelegramId");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("TgJobAdAnalytics.Data.Messages.MessageEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("TelegramChatId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("TelegramMessageDate")
                        .HasColumnType("TEXT");

                    b.Property<long>("TelegramMessageId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TextEntries")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TelegramChatId", "TelegramMessageId")
                        .IsUnique();

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("TgJobAdAnalytics.Data.Salaries.SalaryEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AdId")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Currency")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CurrencyNormalized")
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("Level")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("LowerBound")
                        .HasColumnType("REAL");

                    b.Property<double>("LowerBoundNormalized")
                        .HasColumnType("REAL");

                    b.Property<int?>("Period")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("UpperBound")
                        .HasColumnType("REAL");

                    b.Property<double>("UpperBoundNormalized")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("AdId");

                    b.HasIndex("Level");

                    b.ToTable("Salaries");
                });

            modelBuilder.Entity("TgJobAdAnalytics.Data.Stacks.TechnologyStackEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("TechnologyStacks");
                });

            modelBuilder.Entity("TgJobAdAnalytics.Data.Vectors.AdVectorEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AdId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("Dim")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ShingleCount")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("Signature")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("SignatureHash")
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("Version")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AdId", "Version")
                        .IsUnique();

                    b.ToTable("AdVectors");
                });

            modelBuilder.Entity("TgJobAdAnalytics.Data.Vectors.LshBucketEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AdId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Band")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Version")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AdId");

                    b.HasIndex("Version", "Band", "Key");

                    b.ToTable("LshBuckets");
                });

            modelBuilder.Entity("TgJobAdAnalytics.Data.Vectors.VectorModelVersionEntity", b =>
                {
                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<double>("DuplicateThreshold")
                        .HasColumnType("REAL");

                    b.Property<int>("HashFunctionCount")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LshBandCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LshRowsPerBand")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MinHashSeed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NormalizationVersion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ShingleSize")
                        .HasColumnType("INTEGER");

                    b.Property<double>("SimilarThreshold")
                        .HasColumnType("REAL");

                    b.Property<int>("VocabularySize")
                        .HasColumnType("INTEGER");

                    b.HasKey("Version");

                    b.HasIndex("IsActive");

                    b.ToTable("VectorModelVersions");
                });
#pragma warning restore 612, 618
        }
    }
}
